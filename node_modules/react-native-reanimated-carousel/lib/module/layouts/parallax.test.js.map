{"version":3,"sources":["parallax.test.ts"],"names":["parallaxLayout","jest","mock","interpolate","fn","value","inputRange","outputRange","inputMin","inputMax","length","outputMin","outputMax","progress","Extrapolation","CLAMP","describe","baseConfig","size","vertical","it","layout","expect","toBe","result","toHaveProperty","transform","toHaveLength","verticalConfig","translateX","scale","modeConfig","parallaxScrollingOffset","leftResult","rightResult","parallaxScrollingScale","centerResult","sideResult","toBeGreaterThan","parallaxAdjacentItemScale","translateY","farLeftResult","farRightResult","halfwayResult","quarterResult","zeroSizeConfig","negativeSizeConfig","fullModeConfig","toBeLessThanOrEqual","undefined","zIndex","toBeGreaterThanOrEqual"],"mappings":"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","sourcesContent":["import { parallaxLayout } from \"./parallax\";\n\n// Mock react-native-reanimated\njest.mock(\"react-native-reanimated\", () => ({\n  interpolate: jest.fn((value, inputRange, outputRange) => {\n    // Simple linear interpolation mock for testing\n    const inputMin = inputRange[0];\n    const inputMax = inputRange[inputRange.length - 1];\n    const outputMin = outputRange[0];\n    const outputMax = outputRange[outputRange.length - 1];\n\n    if (value <= inputMin) return outputMin;\n    if (value >= inputMax) return outputMax;\n\n    // Linear interpolation\n    const progress = (value - inputMin) / (inputMax - inputMin);\n    return outputMin + progress * (outputMax - outputMin);\n  }),\n  Extrapolation: {\n    CLAMP: \"clamp\",\n  },\n}));\n\ndescribe(\"parallaxLayout\", () => {\n  const baseConfig = {\n    size: 300,\n    vertical: false,\n  };\n\n  it(\"should create layout function with default config\", () => {\n    const layout = parallaxLayout(baseConfig);\n    expect(typeof layout).toBe(\"function\");\n  });\n\n  it(\"should return transform object for horizontal layout\", () => {\n    const layout = parallaxLayout(baseConfig);\n    const result = layout(0);\n\n    expect(result).toHaveProperty(\"transform\");\n    expect(result).toHaveProperty(\"zIndex\");\n    expect(result.transform).toHaveLength(2);\n    expect(result.transform[0]).toHaveProperty(\"translateX\");\n    expect(result.transform[1]).toHaveProperty(\"scale\");\n  });\n\n  it(\"should return transform object for vertical layout\", () => {\n    const verticalConfig = { ...baseConfig, vertical: true };\n    const layout = parallaxLayout(verticalConfig);\n    const result = layout(0);\n\n    expect(result).toHaveProperty(\"transform\");\n    expect(result).toHaveProperty(\"zIndex\");\n    expect(result.transform).toHaveLength(2);\n    expect(result.transform[0]).toHaveProperty(\"translateY\");\n    expect(result.transform[1]).toHaveProperty(\"scale\");\n  });\n\n  it(\"should handle center position (value = 0)\", () => {\n    const layout = parallaxLayout(baseConfig);\n    const result = layout(0);\n\n    // At center position, translateX should be 0\n    expect(result.transform[0].translateX).toBe(0);\n    // Scale should be a number (parallax logic applied)\n    expect(typeof result.transform[1].scale).toBe(\"number\");\n  });\n\n  it(\"should handle left position (value = -1)\", () => {\n    const layout = parallaxLayout(baseConfig);\n    const result = layout(-1);\n\n    // At left position, translateX should be -size + parallaxScrollingOffset\n    expect(result.transform[0].translateX).toBe(-200); // -300 + 100\n    // Scale should be a number\n    expect(typeof result.transform[1].scale).toBe(\"number\");\n  });\n\n  it(\"should handle right position (value = 1)\", () => {\n    const layout = parallaxLayout(baseConfig);\n    const result = layout(1);\n\n    // At right position, translateX should be size - parallaxScrollingOffset\n    expect(result.transform[0].translateX).toBe(200); // 300 - 100\n    // Scale should be a number\n    expect(typeof result.transform[1].scale).toBe(\"number\");\n  });\n\n  it(\"should handle custom parallaxScrollingOffset\", () => {\n    const modeConfig = { parallaxScrollingOffset: 50 };\n    const layout = parallaxLayout(baseConfig, modeConfig);\n\n    const leftResult = layout(-1);\n    const rightResult = layout(1);\n\n    expect(leftResult.transform[0].translateX).toBe(-250); // -300 + 50\n    expect(rightResult.transform[0].translateX).toBe(250); // 300 - 50\n  });\n\n  it(\"should handle custom parallaxScrollingScale\", () => {\n    const modeConfig = { parallaxScrollingScale: 0.9 };\n    const layout = parallaxLayout(baseConfig, modeConfig);\n\n    const centerResult = layout(0);\n    const sideResult = layout(-1);\n\n    // Verify the structure and that scale values are calculated\n    expect(typeof centerResult.transform[1].scale).toBe(\"number\");\n    expect(typeof sideResult.transform[1].scale).toBe(\"number\");\n    expect(centerResult.transform[1].scale).toBeGreaterThan(0);\n    expect(sideResult.transform[1].scale).toBeGreaterThan(0);\n  });\n\n  it(\"should handle custom parallaxAdjacentItemScale\", () => {\n    const modeConfig = {\n      parallaxScrollingScale: 0.9,\n      parallaxAdjacentItemScale: 0.7,\n    };\n    const layout = parallaxLayout(baseConfig, modeConfig);\n\n    const centerResult = layout(0);\n    const sideResult = layout(-1);\n\n    // Verify the structure and that scale values are calculated\n    expect(typeof centerResult.transform[1].scale).toBe(\"number\");\n    expect(typeof sideResult.transform[1].scale).toBe(\"number\");\n    expect(centerResult.transform[1].scale).toBeGreaterThan(0);\n    expect(sideResult.transform[1].scale).toBeGreaterThan(0);\n  });\n\n  it(\"should handle vertical layout with custom config\", () => {\n    const verticalConfig = { ...baseConfig, vertical: true };\n    const modeConfig = { parallaxScrollingOffset: 80 };\n    const layout = parallaxLayout(verticalConfig, modeConfig);\n\n    const leftResult = layout(-1);\n    const centerResult = layout(0);\n    const rightResult = layout(1);\n\n    expect(leftResult.transform[0].translateY).toBe(-220); // -300 + 80\n    expect(centerResult.transform[0].translateY).toBe(0);\n    expect(rightResult.transform[0].translateY).toBe(220); // 300 - 80\n  });\n\n  it(\"should handle edge case values\", () => {\n    const layout = parallaxLayout(baseConfig);\n\n    // Test with values beyond the normal range\n    const farLeftResult = layout(-2);\n    const farRightResult = layout(2);\n\n    expect(typeof farLeftResult.transform[0].translateX).toBe(\"number\");\n    expect(typeof farLeftResult.transform[1].scale).toBe(\"number\");\n    expect(typeof farRightResult.transform[0].translateX).toBe(\"number\");\n    expect(typeof farRightResult.transform[1].scale).toBe(\"number\");\n  });\n\n  it(\"should handle fractional values\", () => {\n    const layout = parallaxLayout(baseConfig);\n\n    const halfwayResult = layout(0.5);\n    const quarterResult = layout(-0.25);\n\n    expect(typeof halfwayResult.transform[0].translateX).toBe(\"number\");\n    expect(typeof halfwayResult.transform[1].scale).toBe(\"number\");\n    expect(typeof quarterResult.transform[0].translateX).toBe(\"number\");\n    expect(typeof quarterResult.transform[1].scale).toBe(\"number\");\n  });\n\n  it(\"should handle zero size\", () => {\n    const zeroSizeConfig = { ...baseConfig, size: 0 };\n    const layout = parallaxLayout(zeroSizeConfig);\n    const result = layout(0);\n\n    expect(result).toHaveProperty(\"transform\");\n    expect(result).toHaveProperty(\"zIndex\");\n  });\n\n  it(\"should handle negative size\", () => {\n    const negativeSizeConfig = { ...baseConfig, size: -100 };\n    const layout = parallaxLayout(negativeSizeConfig);\n    const result = layout(0);\n\n    expect(result).toHaveProperty(\"transform\");\n    expect(result).toHaveProperty(\"zIndex\");\n  });\n\n  it(\"should handle all config properties at once\", () => {\n    const fullModeConfig = {\n      parallaxScrollingOffset: 75,\n      parallaxScrollingScale: 0.85,\n      parallaxAdjacentItemScale: 0.6,\n    };\n    const layout = parallaxLayout(baseConfig, fullModeConfig);\n\n    const centerResult = layout(0);\n    const sideResult = layout(-1);\n\n    // Verify the structure and that values are calculated correctly\n    expect(typeof centerResult.transform[1].scale).toBe(\"number\");\n    expect(typeof sideResult.transform[1].scale).toBe(\"number\");\n    expect(sideResult.transform[0].translateX).toBe(-225); // -300 + 75\n  });\n\n  it(\"should handle empty mode config\", () => {\n    const layout = parallaxLayout(baseConfig, {});\n    const result = layout(0);\n\n    // At center (value = 0), scale should be a number (default parallax behavior)\n    expect(typeof result.transform[1].scale).toBe(\"number\");\n    expect(result.transform[1].scale).toBeGreaterThan(0);\n    expect(result.transform[1].scale).toBeLessThanOrEqual(1);\n  });\n\n  it(\"should handle undefined mode config\", () => {\n    const layout = parallaxLayout(baseConfig, undefined);\n    const result = layout(0);\n\n    // At center (value = 0), scale should be a number (default parallax behavior)\n    expect(typeof result.transform[1].scale).toBe(\"number\");\n    expect(result.transform[1].scale).toBeGreaterThan(0);\n    expect(result.transform[1].scale).toBeLessThanOrEqual(1);\n  });\n\n  it(\"should maintain consistent zIndex calculation\", () => {\n    const layout = parallaxLayout(baseConfig);\n\n    const leftResult = layout(-1);\n    const centerResult = layout(0);\n    const rightResult = layout(1);\n\n    expect(typeof leftResult.zIndex).toBe(\"number\");\n    expect(typeof centerResult.zIndex).toBe(\"number\");\n    expect(typeof rightResult.zIndex).toBe(\"number\");\n\n    // Center should have highest zIndex\n    expect(centerResult.zIndex).toBeGreaterThanOrEqual(leftResult.zIndex);\n    expect(centerResult.zIndex).toBeGreaterThanOrEqual(rightResult.zIndex);\n  });\n});\n"]}