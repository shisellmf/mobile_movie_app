{"version":3,"sources":["useCommonVariables.test.tsx"],"names":["renderHook","useCommonVariables","input","vertical","width","height","loop","enabled","testID","style","autoPlay","autoPlayInterval","data","renderItem","pagingEnabled","defaultIndex","autoFillData","dataLength","rawData","rawDataLength","scrollAnimationDuration","snapEnabled","overscrollEnabled","describe","it","hook","expect","result","current","size","toMatchInlineSnapshot","validLength","handlerOffset","value","verticalInput","toBe","inputWithDefaultIndex","customOffset","addListener","jest","fn","removeListener","modify","inputWithCustomOffset","defaultScrollOffsetValue","singleItemInput","emptyInput","negativeIndexInput","noLoopInput","props","initialProps","updatedInput","rerender","zeroSizeInput","largeIndexInput","verticalZeroHeightInput","floatInput","testCases","expected","testInput"],"mappings":"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","sourcesContent":["import { renderHook } from \"@testing-library/react-hooks\";\n\nimport { useCommonVariables } from \"./useCommonVariables\";\nimport { TInitializeCarouselProps } from \"./useInitProps\";\n\ntype UseCommonVariablesInput = Parameters<typeof useCommonVariables>[0];\n\nconst input = {\n  vertical: false,\n  width: 700,\n  height: 350,\n  loop: true,\n  enabled: true,\n  testID: \"xxx\",\n  style: {\n    width: \"100%\",\n  },\n  autoPlay: false,\n  autoPlayInterval: 2000,\n  data: [0, 1, 2, 3],\n  renderItem: () => null,\n  pagingEnabled: true,\n  defaultIndex: 0,\n  autoFillData: true,\n  dataLength: 4,\n  rawData: [0, 1, 2, 3],\n  rawDataLength: 4,\n  scrollAnimationDuration: 500,\n  snapEnabled: true,\n  overscrollEnabled: true,\n} as unknown as UseCommonVariablesInput;\n\ndescribe(\"useCommonVariables\", () => {\n  it(\"should return the correct values\", async () => {\n    const hook = renderHook(() => useCommonVariables(input));\n\n    expect(hook.result.current.size).toMatchInlineSnapshot(\"700\");\n    expect(hook.result.current.validLength).toMatchInlineSnapshot(\"3\");\n    expect(hook.result.current.handlerOffset.value).toMatchInlineSnapshot(\"-0\");\n  });\n\n  it(\"should handle vertical orientation\", () => {\n    const verticalInput = {\n      ...input,\n      vertical: true,\n    } as TInitializeCarouselProps<any>;\n\n    const hook = renderHook(() => useCommonVariables(verticalInput));\n\n    expect(hook.result.current.size).toBe(350); // Should use height instead of width\n    expect(hook.result.current.validLength).toBe(3);\n  });\n\n  it(\"should calculate defaultHandlerOffsetValue correctly with non-zero defaultIndex\", () => {\n    const inputWithDefaultIndex = {\n      ...input,\n      defaultIndex: 2,\n    };\n\n    const hook = renderHook(() => useCommonVariables(inputWithDefaultIndex));\n\n    expect(hook.result.current.handlerOffset.value).toBe(-1400); // -2 * 700\n  });\n\n  it(\"should use custom defaultScrollOffsetValue when provided\", () => {\n    const customOffset = {\n      value: -500,\n      addListener: jest.fn(),\n      removeListener: jest.fn(),\n      modify: jest.fn(),\n    };\n    const inputWithCustomOffset = {\n      ...input,\n      defaultScrollOffsetValue: customOffset,\n    };\n\n    const hook = renderHook(() => useCommonVariables(inputWithCustomOffset));\n\n    expect(hook.result.current.handlerOffset).toBe(customOffset);\n    expect(hook.result.current.handlerOffset.value).toBe(-500);\n  });\n\n  it(\"should handle single data item\", () => {\n    const singleItemInput = {\n      ...input,\n      dataLength: 1,\n      data: [0],\n    };\n\n    const hook = renderHook(() => useCommonVariables(singleItemInput));\n\n    expect(hook.result.current.validLength).toBe(0); // dataLength - 1\n  });\n\n  it(\"should handle zero dataLength\", () => {\n    const emptyInput = {\n      ...input,\n      dataLength: 0,\n      data: [],\n    };\n\n    const hook = renderHook(() => useCommonVariables(emptyInput));\n\n    expect(hook.result.current.validLength).toBe(-1); // dataLength - 1\n  });\n\n  it(\"should handle negative defaultIndex\", () => {\n    const negativeIndexInput = {\n      ...input,\n      defaultIndex: -1,\n    };\n\n    const hook = renderHook(() => useCommonVariables(negativeIndexInput));\n\n    expect(hook.result.current.handlerOffset.value).toBe(-700); // -Math.abs(-1 * 700)\n  });\n\n  it(\"should handle loop disabled\", () => {\n    const noLoopInput = {\n      ...input,\n      loop: false,\n    };\n\n    const hook = renderHook(() => useCommonVariables(noLoopInput));\n\n    expect(hook.result.current.size).toBe(700);\n    expect(hook.result.current.validLength).toBe(3);\n  });\n\n  it(\"should update when props change\", () => {\n    const hook = renderHook(({ props }) => useCommonVariables(props), {\n      initialProps: { props: input },\n    });\n\n    expect(hook.result.current.size).toBe(700);\n\n    // Update width\n    const updatedInput = {\n      ...input,\n      width: 800,\n    };\n\n    hook.rerender({ props: updatedInput });\n    expect(hook.result.current.size).toBe(800);\n  });\n\n  it(\"should handle dataLength changes\", () => {\n    const hook = renderHook(({ props }) => useCommonVariables(props), {\n      initialProps: { props: input },\n    });\n\n    expect(hook.result.current.validLength).toBe(3);\n\n    // Update dataLength\n    const updatedInput = {\n      ...input,\n      dataLength: 6,\n    };\n\n    hook.rerender({ props: updatedInput });\n    expect(hook.result.current.validLength).toBe(5);\n  });\n\n  it(\"should handle zero size (edge case)\", () => {\n    const zeroSizeInput = {\n      ...input,\n      width: 0,\n    };\n\n    const hook = renderHook(() => useCommonVariables(zeroSizeInput));\n\n    expect(hook.result.current.size).toBe(0);\n    expect(hook.result.current.handlerOffset.value).toBe(-0); // -Math.abs(0 * 0)\n  });\n\n  it(\"should handle large defaultIndex\", () => {\n    const largeIndexInput = {\n      ...input,\n      defaultIndex: 10,\n    };\n\n    const hook = renderHook(() => useCommonVariables(largeIndexInput));\n\n    expect(hook.result.current.handlerOffset.value).toBe(-7000); // -Math.abs(10 * 700)\n  });\n\n  it(\"should handle vertical with zero height\", () => {\n    const verticalZeroHeightInput = {\n      ...input,\n      vertical: true,\n      height: 0,\n    } as TInitializeCarouselProps<any>;\n\n    const hook = renderHook(() => useCommonVariables(verticalZeroHeightInput));\n\n    expect(hook.result.current.size).toBe(0);\n  });\n\n  it(\"should handle floating point dimensions\", () => {\n    const floatInput = {\n      ...input,\n      width: 700.5,\n      height: 350.25,\n    };\n\n    const hook = renderHook(() => useCommonVariables(floatInput));\n\n    expect(hook.result.current.size).toBe(700.5);\n  });\n\n  it(\"should calculate validLength correctly for different data lengths\", () => {\n    const testCases = [\n      { dataLength: 0, expected: -1 },\n      { dataLength: 1, expected: 0 },\n      { dataLength: 5, expected: 4 },\n      { dataLength: 100, expected: 99 },\n    ];\n\n    for (const { dataLength, expected } of testCases) {\n      const testInput = {\n        ...input,\n        dataLength,\n      };\n\n      const hook = renderHook(() => useCommonVariables(testInput));\n      expect(hook.result.current.validLength).toBe(expected);\n    }\n  });\n});\n"]}