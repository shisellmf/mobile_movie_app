{"version":3,"sources":["parallax.test.ts"],"names":["jest","mock","interpolate","fn","value","inputRange","outputRange","inputMin","inputMax","length","outputMin","outputMax","progress","Extrapolation","CLAMP","describe","baseConfig","size","vertical","it","layout","expect","toBe","result","toHaveProperty","transform","toHaveLength","verticalConfig","translateX","scale","modeConfig","parallaxScrollingOffset","leftResult","rightResult","parallaxScrollingScale","centerResult","sideResult","toBeGreaterThan","parallaxAdjacentItemScale","translateY","farLeftResult","farRightResult","halfwayResult","quarterResult","zeroSizeConfig","negativeSizeConfig","fullModeConfig","toBeLessThanOrEqual","undefined","zIndex","toBeGreaterThanOrEqual"],"mappings":"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","sourcesContent":["import { parallaxLayout } from \"./parallax\";\n\n// Mock react-native-reanimated\njest.mock(\"react-native-reanimated\", () => ({\n  interpolate: jest.fn((value, inputRange, outputRange) => {\n    // Simple linear interpolation mock for testing\n    const inputMin = inputRange[0];\n    const inputMax = inputRange[inputRange.length - 1];\n    const outputMin = outputRange[0];\n    const outputMax = outputRange[outputRange.length - 1];\n\n    if (value <= inputMin) return outputMin;\n    if (value >= inputMax) return outputMax;\n\n    // Linear interpolation\n    const progress = (value - inputMin) / (inputMax - inputMin);\n    return outputMin + progress * (outputMax - outputMin);\n  }),\n  Extrapolation: {\n    CLAMP: \"clamp\",\n  },\n}));\n\ndescribe(\"parallaxLayout\", () => {\n  const baseConfig = {\n    size: 300,\n    vertical: false,\n  };\n\n  it(\"should create layout function with default config\", () => {\n    const layout = parallaxLayout(baseConfig);\n    expect(typeof layout).toBe(\"function\");\n  });\n\n  it(\"should return transform object for horizontal layout\", () => {\n    const layout = parallaxLayout(baseConfig);\n    const result = layout(0);\n\n    expect(result).toHaveProperty(\"transform\");\n    expect(result).toHaveProperty(\"zIndex\");\n    expect(result.transform).toHaveLength(2);\n    expect(result.transform[0]).toHaveProperty(\"translateX\");\n    expect(result.transform[1]).toHaveProperty(\"scale\");\n  });\n\n  it(\"should return transform object for vertical layout\", () => {\n    const verticalConfig = { ...baseConfig, vertical: true };\n    const layout = parallaxLayout(verticalConfig);\n    const result = layout(0);\n\n    expect(result).toHaveProperty(\"transform\");\n    expect(result).toHaveProperty(\"zIndex\");\n    expect(result.transform).toHaveLength(2);\n    expect(result.transform[0]).toHaveProperty(\"translateY\");\n    expect(result.transform[1]).toHaveProperty(\"scale\");\n  });\n\n  it(\"should handle center position (value = 0)\", () => {\n    const layout = parallaxLayout(baseConfig);\n    const result = layout(0);\n\n    // At center position, translateX should be 0\n    expect(result.transform[0].translateX).toBe(0);\n    // Scale should be a number (parallax logic applied)\n    expect(typeof result.transform[1].scale).toBe(\"number\");\n  });\n\n  it(\"should handle left position (value = -1)\", () => {\n    const layout = parallaxLayout(baseConfig);\n    const result = layout(-1);\n\n    // At left position, translateX should be -size + parallaxScrollingOffset\n    expect(result.transform[0].translateX).toBe(-200); // -300 + 100\n    // Scale should be a number\n    expect(typeof result.transform[1].scale).toBe(\"number\");\n  });\n\n  it(\"should handle right position (value = 1)\", () => {\n    const layout = parallaxLayout(baseConfig);\n    const result = layout(1);\n\n    // At right position, translateX should be size - parallaxScrollingOffset\n    expect(result.transform[0].translateX).toBe(200); // 300 - 100\n    // Scale should be a number\n    expect(typeof result.transform[1].scale).toBe(\"number\");\n  });\n\n  it(\"should handle custom parallaxScrollingOffset\", () => {\n    const modeConfig = { parallaxScrollingOffset: 50 };\n    const layout = parallaxLayout(baseConfig, modeConfig);\n\n    const leftResult = layout(-1);\n    const rightResult = layout(1);\n\n    expect(leftResult.transform[0].translateX).toBe(-250); // -300 + 50\n    expect(rightResult.transform[0].translateX).toBe(250); // 300 - 50\n  });\n\n  it(\"should handle custom parallaxScrollingScale\", () => {\n    const modeConfig = { parallaxScrollingScale: 0.9 };\n    const layout = parallaxLayout(baseConfig, modeConfig);\n\n    const centerResult = layout(0);\n    const sideResult = layout(-1);\n\n    // Verify the structure and that scale values are calculated\n    expect(typeof centerResult.transform[1].scale).toBe(\"number\");\n    expect(typeof sideResult.transform[1].scale).toBe(\"number\");\n    expect(centerResult.transform[1].scale).toBeGreaterThan(0);\n    expect(sideResult.transform[1].scale).toBeGreaterThan(0);\n  });\n\n  it(\"should handle custom parallaxAdjacentItemScale\", () => {\n    const modeConfig = {\n      parallaxScrollingScale: 0.9,\n      parallaxAdjacentItemScale: 0.7,\n    };\n    const layout = parallaxLayout(baseConfig, modeConfig);\n\n    const centerResult = layout(0);\n    const sideResult = layout(-1);\n\n    // Verify the structure and that scale values are calculated\n    expect(typeof centerResult.transform[1].scale).toBe(\"number\");\n    expect(typeof sideResult.transform[1].scale).toBe(\"number\");\n    expect(centerResult.transform[1].scale).toBeGreaterThan(0);\n    expect(sideResult.transform[1].scale).toBeGreaterThan(0);\n  });\n\n  it(\"should handle vertical layout with custom config\", () => {\n    const verticalConfig = { ...baseConfig, vertical: true };\n    const modeConfig = { parallaxScrollingOffset: 80 };\n    const layout = parallaxLayout(verticalConfig, modeConfig);\n\n    const leftResult = layout(-1);\n    const centerResult = layout(0);\n    const rightResult = layout(1);\n\n    expect(leftResult.transform[0].translateY).toBe(-220); // -300 + 80\n    expect(centerResult.transform[0].translateY).toBe(0);\n    expect(rightResult.transform[0].translateY).toBe(220); // 300 - 80\n  });\n\n  it(\"should handle edge case values\", () => {\n    const layout = parallaxLayout(baseConfig);\n\n    // Test with values beyond the normal range\n    const farLeftResult = layout(-2);\n    const farRightResult = layout(2);\n\n    expect(typeof farLeftResult.transform[0].translateX).toBe(\"number\");\n    expect(typeof farLeftResult.transform[1].scale).toBe(\"number\");\n    expect(typeof farRightResult.transform[0].translateX).toBe(\"number\");\n    expect(typeof farRightResult.transform[1].scale).toBe(\"number\");\n  });\n\n  it(\"should handle fractional values\", () => {\n    const layout = parallaxLayout(baseConfig);\n\n    const halfwayResult = layout(0.5);\n    const quarterResult = layout(-0.25);\n\n    expect(typeof halfwayResult.transform[0].translateX).toBe(\"number\");\n    expect(typeof halfwayResult.transform[1].scale).toBe(\"number\");\n    expect(typeof quarterResult.transform[0].translateX).toBe(\"number\");\n    expect(typeof quarterResult.transform[1].scale).toBe(\"number\");\n  });\n\n  it(\"should handle zero size\", () => {\n    const zeroSizeConfig = { ...baseConfig, size: 0 };\n    const layout = parallaxLayout(zeroSizeConfig);\n    const result = layout(0);\n\n    expect(result).toHaveProperty(\"transform\");\n    expect(result).toHaveProperty(\"zIndex\");\n  });\n\n  it(\"should handle negative size\", () => {\n    const negativeSizeConfig = { ...baseConfig, size: -100 };\n    const layout = parallaxLayout(negativeSizeConfig);\n    const result = layout(0);\n\n    expect(result).toHaveProperty(\"transform\");\n    expect(result).toHaveProperty(\"zIndex\");\n  });\n\n  it(\"should handle all config properties at once\", () => {\n    const fullModeConfig = {\n      parallaxScrollingOffset: 75,\n      parallaxScrollingScale: 0.85,\n      parallaxAdjacentItemScale: 0.6,\n    };\n    const layout = parallaxLayout(baseConfig, fullModeConfig);\n\n    const centerResult = layout(0);\n    const sideResult = layout(-1);\n\n    // Verify the structure and that values are calculated correctly\n    expect(typeof centerResult.transform[1].scale).toBe(\"number\");\n    expect(typeof sideResult.transform[1].scale).toBe(\"number\");\n    expect(sideResult.transform[0].translateX).toBe(-225); // -300 + 75\n  });\n\n  it(\"should handle empty mode config\", () => {\n    const layout = parallaxLayout(baseConfig, {});\n    const result = layout(0);\n\n    // At center (value = 0), scale should be a number (default parallax behavior)\n    expect(typeof result.transform[1].scale).toBe(\"number\");\n    expect(result.transform[1].scale).toBeGreaterThan(0);\n    expect(result.transform[1].scale).toBeLessThanOrEqual(1);\n  });\n\n  it(\"should handle undefined mode config\", () => {\n    const layout = parallaxLayout(baseConfig, undefined);\n    const result = layout(0);\n\n    // At center (value = 0), scale should be a number (default parallax behavior)\n    expect(typeof result.transform[1].scale).toBe(\"number\");\n    expect(result.transform[1].scale).toBeGreaterThan(0);\n    expect(result.transform[1].scale).toBeLessThanOrEqual(1);\n  });\n\n  it(\"should maintain consistent zIndex calculation\", () => {\n    const layout = parallaxLayout(baseConfig);\n\n    const leftResult = layout(-1);\n    const centerResult = layout(0);\n    const rightResult = layout(1);\n\n    expect(typeof leftResult.zIndex).toBe(\"number\");\n    expect(typeof centerResult.zIndex).toBe(\"number\");\n    expect(typeof rightResult.zIndex).toBe(\"number\");\n\n    // Center should have highest zIndex\n    expect(centerResult.zIndex).toBeGreaterThanOrEqual(leftResult.zIndex);\n    expect(centerResult.zIndex).toBeGreaterThanOrEqual(rightResult.zIndex);\n  });\n});\n"]}