var _computeOffsetIfDataChanged=require("./compute-offset-if-data-changed");describe("computeOffsetIfDataChanged",function(){var size=634;it("should return the correct values, if index is 0",function(){var index=0;var result=(0,_computeOffsetIfDataChanged.computeOffsetIfDataChanged)({direction:-1,previousLength:4,currentLength:6,size:size,handlerOffset:index*size});expect(result).toMatchInlineSnapshot("0");});it("should return the correct values, if index is 1",function(){var index=1;var result=(0,_computeOffsetIfDataChanged.computeOffsetIfDataChanged)({direction:-1,previousLength:4,currentLength:6,size:size,handlerOffset:index*size});expect(result).toMatchInlineSnapshot("634");});it("should handle positive direction",function(){var result=(0,_computeOffsetIfDataChanged.computeOffsetIfDataChanged)({direction:1,previousLength:4,currentLength:3,size:100,handlerOffset:300});expect(result).toBeDefined();expect(typeof result).toBe("number");});it("should handle data reduction with positive direction where prevIndex > currentLength - 1",function(){var result=(0,_computeOffsetIfDataChanged.computeOffsetIfDataChanged)({direction:-1,previousLength:5,currentLength:2,size:100,handlerOffset:400});expect(result).toBe(-100);});it("should handle data reduction with negative direction where prevIndex > currentLength - 1",function(){var result=(0,_computeOffsetIfDataChanged.computeOffsetIfDataChanged)({direction:1,previousLength:5,currentLength:2,size:100,handlerOffset:500});expect(result).toBe(200);});it("should handle edge case with zero previous length",function(){var result=(0,_computeOffsetIfDataChanged.computeOffsetIfDataChanged)({direction:-1,previousLength:0,currentLength:3,size:100,handlerOffset:0});expect(result).toBeDefined();expect(typeof result).toBe("number");});it("should handle edge case with equal lengths",function(){var result=(0,_computeOffsetIfDataChanged.computeOffsetIfDataChanged)({direction:-1,previousLength:3,currentLength:3,size:100,handlerOffset:200});expect(result).toBe(200);});it("should handle large offset values",function(){var result=(0,_computeOffsetIfDataChanged.computeOffsetIfDataChanged)({direction:-1,previousLength:4,currentLength:6,size:1000,handlerOffset:10000});expect(result).toBeDefined();expect(typeof result).toBe("number");});});describe("omitZero",function(){it("should return 0 when first parameter is 0",function(){expect((0,_computeOffsetIfDataChanged.omitZero)(0,5)).toBe(0);expect((0,_computeOffsetIfDataChanged.omitZero)(0,-3)).toBe(0);expect((0,_computeOffsetIfDataChanged.omitZero)(0,0)).toBe(0);});it("should return second parameter when first parameter is not 0",function(){expect((0,_computeOffsetIfDataChanged.omitZero)(1,5)).toBe(5);expect((0,_computeOffsetIfDataChanged.omitZero)(-1,10)).toBe(10);expect((0,_computeOffsetIfDataChanged.omitZero)(0.1,-3)).toBe(-3);});it("should handle negative first parameter",function(){expect((0,_computeOffsetIfDataChanged.omitZero)(-5,7)).toBe(7);expect((0,_computeOffsetIfDataChanged.omitZero)(-0.1,2)).toBe(2);});it("should handle floating point numbers",function(){expect((0,_computeOffsetIfDataChanged.omitZero)(0.0,8)).toBe(0);expect((0,_computeOffsetIfDataChanged.omitZero)(1.5,9)).toBe(9);});});
//# sourceMappingURL=compute-offset-if-data-changed.test.js.map