{"version":3,"sources":["PaginationItem.tsx"],"names":["PaginationItem","props","animValue","dotStyle","activeDotStyle","index","count","size","horizontal","children","onPress","accessibilityLabel","defaultDotSize","sizes","width","height","animStyle","inputRange","outputRange","value","transform","translateX","Extrapolation","CLAMP","interpolate","selected","overflow","rotateZ","backgroundColor","flex"],"mappings":"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","sourcesContent":["import type { PropsWithChildren } from \"react\";\nimport React from \"react\";\nimport type { ViewStyle } from \"react-native\";\nimport { Pressable, View } from \"react-native\";\nimport Animated, { Extrapolation, interpolate, useAnimatedStyle } from \"react-native-reanimated\";\n\nexport type DotStyle = Omit<ViewStyle, \"width\" | \"height\"> & {\n  width?: number;\n  height?: number;\n};\n\nexport const PaginationItem: React.FC<\n  PropsWithChildren<{\n    index: number;\n    count: number;\n    size?: number;\n    animValue: Animated.SharedValue<number>;\n    horizontal?: boolean;\n    dotStyle?: DotStyle;\n    activeDotStyle?: DotStyle;\n    onPress: () => void;\n    accessibilityLabel?: string;\n  }>\n> = (props) => {\n  const {\n    animValue,\n    dotStyle,\n    activeDotStyle,\n    index,\n    count,\n    size,\n    horizontal,\n    children,\n    onPress,\n    accessibilityLabel,\n  } = props;\n\n  const defaultDotSize = 10;\n\n  const sizes = {\n    width: size || dotStyle?.width || defaultDotSize,\n    height: size || dotStyle?.height || defaultDotSize,\n  };\n\n  /**\n   * TODO: Keep this for future implementation\n   * Used to change the size of the active dot with animation\n   */\n  // const animatedSize = {\n  //   width: activeDotStyle?.width,\n  //   height: activeDotStyle?.height,\n  // };\n\n  const width = sizes.width;\n  const height = sizes.height;\n\n  const animStyle = useAnimatedStyle(() => {\n    const size = horizontal ? height : width;\n    let inputRange = [index - 1, index, index + 1];\n    let outputRange = [-size, 0, size];\n\n    if (index === 0 && animValue?.value > count - 1) {\n      inputRange = [count - 1, count, count + 1];\n      outputRange = [-size, 0, size];\n    }\n\n    return {\n      transform: [\n        {\n          translateX: interpolate(animValue?.value, inputRange, outputRange, Extrapolation.CLAMP),\n        },\n      ],\n    };\n  }, [animValue, index, count, horizontal]);\n\n  return (\n    <Pressable\n      onPress={onPress}\n      accessibilityLabel={accessibilityLabel}\n      accessibilityRole=\"button\"\n      accessibilityHint={animValue.value === index ? \"\" : `Go to ${accessibilityLabel}`}\n      accessibilityState={{ selected: animValue.value === index }}\n    >\n      <View\n        style={[\n          {\n            width,\n            height,\n            overflow: \"hidden\",\n            transform: [\n              {\n                rotateZ: horizontal ? \"90deg\" : \"0deg\",\n              },\n            ],\n          },\n          dotStyle,\n        ]}\n      >\n        <Animated.View\n          style={[\n            {\n              backgroundColor: \"black\",\n              flex: 1,\n            },\n            animStyle,\n            activeDotStyle,\n          ]}\n        >\n          {children}\n        </Animated.View>\n      </View>\n    </Pressable>\n  );\n};\n"]}